# Created by Luca Persano 20/01/2021  luca.persano@phelma.grenoble-inp.fr
#!/bin/bash

zoomNb=7
webNb=2
discordNb=2

ADElink="https://edt.grenoble-inp.fr/directCal/2020-2021/etudiant/phelma?resources=20915,13608,20914,13629"

cours=("Circuits_Actifs_HF"                    #0
"Architecture_Systemes_Integres"               #1
"Asservissements_Numeriques"                   #2
"DSP_feng"                                     #3
"Parcour_Creation_Entreprise"                  #4
"Parcour_Management"                           #5
"Communication_et_Sys_Communication_Num"       #6
"Sys_Exploitation"                             #7
"Other_course_?(Chamilo)"              #8
"Anglais"                                      #9
"CM_salle_Blanche"                             #10
"Other_course_?(Discord)"              #11
"EXIT")                                        #12


links=("zoommtg://zoom.us/join?action=join&confno=4750357476"               #0
       "zoommtg://zoom.us/join?action=join&confno=99448600720"              #1
       "zoommtg://zoom.us/join?action=join&confno=0"                        #2
       "zoommtg://zoom.us/join?action=join&confno=2269417657"               #3
       "zoommtg://zoom.us/join?action=join&confno=0"                        #4
       "zoommtg://zoom.us/join?action=join&confno=0"                        #5
       "zoommtg://zoom.us/join?action=join&confno=0"                        #6
       "zoommtg://zoom.us/join?action=join&confno=91084737961"              #7
       "https://cas-simsu.grenet.fr/login?service=http%3A%2F%2Fchamilo.grenoble-inp.fr%2Fmain%2Fauth%2Fcas%2Flogincas.php%3Ffirstpage%3DPHELMACATALOGUE"                                                              #8
       "https://chamilo.grenoble-inp.fr/courses/PHELMA4PMCAN42/"            #9
       "discord"                                                            #10
       "discord"                                                            #11
       "special"                                                            #12
)

codes=("1111222233"               #0
       "557050"                   #1
       "X"                        #2
       "407990"                   #3
       "X"                        #4
       "X"                        #5
       "X"                        #6
       "os"                       #7
       "none"                     #8
       "none"                     #9
       "discord"                  #10
       "discord"                  #11
       "special"                  #12
)


first=0
lastzoom=$zoomNb

firstweb=$(($lastzoom + 1))
lastweb=$(($firstweb + $webNb -1))

firstdiscord=$(($lastweb + 1))
lastdiscord=$(($firstdiscord + $discordNb - 1))

last=$(($lastdiscord + 1))


#Displays all courses and starts the user's choice by calling startcourses function
#NO PARAM
#NO RETURN

function show_and_start_courses() {
    var=$first

    printf "\n\n_____________________________________________________________\n\n"
    while [[ $last -ge $var ]]
      do

        printf "|  %-40s | \t [$var] \n"  ${cours[var]}
        printf "_____________________________________________________________\n\n"
        var=$(($var + 1))
      done
    echo
    read -p "Enter Your Choice: " choice

    if  [[ $first -le $choice ]] && [[ $last -ge $choice ]] ;then
        start_course $choice

    else
        echo "Illegal answer. Please input an integer"
        exit 0
    fi
}


function update_ikhal() {
  pack1="khal"
  Test=0
  dpkg -s "${khal}" >/dev/null 2>&1 || Test=1

  if [ $Test -eq 1 ]; then
      echo "$pack1 is installed! Trying to update..."
  else
      echo "Package  $pack1 is NOT installed. Please install ikhal (sudo apt install khal for instance) to use this feature."
      exit 0
  fi
  printf "\nPlease enter your Phelma credentials to update your agenda from ADE (with HTTP protocol !)\n\n"
  read -p "Username : " user
  echo -n "Password :"
  read -s  p
  printf "\n\n Please wait a few seconds\n"
  wget --output-document ade.ics --auth-no-challenge --http-user=$user --http-password=$p $ADElink
  khal import -a work --batch ade.ics
}

function fetch_and_parse_calendar (){
  printf "\nPlease enter your Phelma credentials to update your agenda from ADE (with HTTP protocol !)\n\n"
  read -p "Username : " user
  echo -n "Password :"
  read -s  p
  printf "\n\n Please wait a few seconds\n"
  wget --output-document ade.ics --auth-no-challenge --http-user=$user --http-password=$p $ADElink
  cat ade.ics | grep BEGIN:VEVENT -n -A 4 | grep -v BEGIN | grep  DTSTART:`date +"%Y%m%d"` -A 2 -B 1 > /tmp/pedt_classes
  cat /tmp/pedt_classes | grep DTEND > /tmp/pedt_classes_ends
  declare -a time_array
  time_array=()
  declare -a line_array
  line_array=()
  for element in `cat /tmp/pedt_classes_ends`
  do
    tempvar=${element##*"T"}
    time_array+=($((10#$(echo $tempvar | tail -c 9 | head -c 4) + 100)))
    line_array+=(${element%%"-"*})
  done
  #echo `declare -p time_array`
  #echo `declare -p line_array`
  bigdate=2500
  for i in `seq  0 $((${#time_array[@]} - 1))`
  do
    if [ `date +"%H%M"` -lt ${time_array[i]} ]
    then
      if [ ${time_array[i]} -lt $bigdate ]
      then
        bigdate=${time_array[i]}
      fi
    fi
  done
  if [ $bigdate -eq 2500 ]
  then
    echo You have no classes left today or there was an error during timetable fetching
    exit 0
  fi
  #Seeking class from bigdate
  foundclass=-1
  for i in `seq 0 $((${#time_array[@]} - 1 ))`
  do
    if [ ${time_array[$i]} -eq $bigdate ]
    then
      foundclass=$i
    fi
  done
  if [ $foundclass -eq -1 ]
  then
    echo "There was an error ): at line 167 of launcher"
    exit 0
  fi
  summary=$(cat /tmp/pedt_classes | grep $((${line_array[foundclass]} + 1))-SUMMARY: )
  summary=${summary##*":"}
  summary=${summary%%"("*}
  case "$summary" in
    "Circuits actifs hyperf. opt")
    start_course 0;;
    "Architect. syst. integ. ")
    start_course 1;;
    " X ")
    start_course 2;;
    "Digital Sign Process ")
    start_course 3;;
    " X ")
    start_course 4;;
    " X ")
    start_course 5;;
    " X ")
    start_course 6;;
    "Syst. d'exploit. ")
    start_course 7;;
    "Syst. d'exploitation ")
    start_course 7;;
    " X ")
    start_course 8;;
    " X ")
    start_course 9;;
    *)
    echo Class $summary not found;;
  esac
}

#FUNCTION SHOWING help
#NO PARAM
#NO RETURN

function show_help (){
    printf "\nOptions : $0\n\n"
    printf "DESCRIPTION\n\n"
    printf "The package startmyclass will display a list of all of your courses and ask you to choose one. It will then open the right program with the right parameters depending on your choice. startmyclass also supports arguments which are specified below.\n\n"
    printf "LICENSE\n\n"
    printf "This program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by \nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n"
    printf "This package contains codes and IDs (contained in the cours and links variables) you should never distribute and are outside the licence, if you do, we will not take responsability.\n\n"
    printf "CONTACT\n\n"
    printf "Please do not hesitate to contact us to report errors, or feedbacks : cristiano.merio@phelma.grenoble-inp.fr  luca.persano@phelma.grenoble-inp.fr\nIf you want to contribute to the program, do a merge request.\n\n"
    printf "OPTIONS:\n\n"
    printf "%-20s %-100s \n" $" -e|--edt"     $"Display the agenda before asking the course you wish to start, (ikhal must be installed to use this feature)"
    printf "%-20s %-100s \n" $" -c|--choice"  $"Prints your next course before asking the course you wish to start"
    printf "%-20s %-100s \n" $" -u|--update"  $"Updates ikhal calendar, (ikhal must be installed to use this feature)"
    printf "%-20s %-100s \n" $" -h|--help"    $"Prints help"
    printf "%-20s %-100s \n" $" -f|--fetch"   $"Downloads calendar from ADE and starts the next class. (WIP feature, does not work if there are multiple classes in a single time slot)"

return 0
}


#FUNCTION starting courses
#PARAM : number of the course to start
#NO RETURN

function start_course(){
  if [ `uname -r | grep Microsoft | wc -l` -eq 1 ];then
    iswindowswm=1
  else
    iswindowswm=0
  fi

  if [[ $first -le $1 ]] && [[ $lastzoom -ge $1 ]];then
      xdg-open  ${links[$1]} &
      echo "Launching zoom... Please wait"
      if [ $iswindowswm -eq 0 ];then
        echo -n ${codes[$1]} | xclip -sel clip
      else
        echo -n ${codes[$1]} | clip.exe
      fi

  elif [[ $firstweb -le $1 ]] && [[ $lastweb -ge $1 ]];then
      xdg-open  ${links[$1]} &
      echo "Launching web page... Please wait"

  elif [[ $firstdiscord -le $1 ]] && [[ $lastdiscord -ge $1 ]];then
      discord &
      echo "Launching discord... Please wait"

  else
    echo "Exiting. Bye Bye."
    exit 0
  fi

}

#MAIN CODE HERE

if [ ! -z "$1" ];then
    while [ ! -z "$1" ]
    do
      case "$1" in
         -u|--update)
            echo "Updating ikhal edt"
            update_ikhal;;
         -e|--edt)
             echo "Displaying edt"
             ikhal
             show_and_start_courses;;
         -c|--courses)
             echo "Available choices are :"
             show_and_start_courses;;
         -f|--fetch)
             echo "Finding next lesson.."
             fetch_and_parse_calendar;;
         -h|--help)
            show_help;;
         *) show_help;;

      esac
      shift
    done
else
  show_and_start_courses
fi
